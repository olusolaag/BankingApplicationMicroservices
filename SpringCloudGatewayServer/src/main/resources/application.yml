server:
  port: 8765
 
  
spring:
  application:
    name: GATEWAY-SERVICE
  redis:
    port: 6379
    host: localhost
  cloud:
    gateway:
       routes:
        #Route Mapping
         - id: banking-account-microservices               #RouteIdentifier
           uri: http://localhost:9015/         #Respective microservice URL which needs to be mapped
         #Request Context Path Mapping
           predicates:
             - Path=/api/account-service/**   
           filters:
             - name: CircuitBreaker
               args:
                 name: banking-account-microservices
                 fallbackuri: forward:/accountFallBack 
      
        
        #Route Mapping - With out Filters - Version 2 Request
         - id: banking-customer-microservice
           uri: http://localhost:9001/
           predicates:
             - Path=/api/customer/**
           filters:
             - name: CircuitBreaker
               args:
                 name: banking-customer-microservice
                 fallbackuri: forward:/customerFallBack 
        
        #Route Mapping - With out Filters - Version 2 Request
         - id: banking-transaction-microservice
           uri: http://localhost:9001/
           predicates:
             - Path=/api/transaction-service/**
           filters:
             - name: CircuitBreaker
               args:
                 name: banking-transaction-microservice
                 fallbackuri: forward:/transactionFallBack  
   
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream
    
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
    


        #Route Mapping - With Filters - Version 1 Request
      #- id: orderMicroservice
      #  uri: http://localhost:9001/
       # predicates:
       # - Path=/ecommerce/** 
       # filters:
       # - RewritePath=/ecommerce, /ecommerceV2/      #Rewriting the path 
        
        # PreFilter - AddRequestHeader=custom-Request-header, customer-Request-header-value
        # PostFilter - AddResponseHeader=custom-Request-header, customer-Response-header-value
        